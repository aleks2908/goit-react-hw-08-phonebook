{"version":3,"file":"static/js/635.e249755a.chunk.js","mappings":"gOACA,EAA8B,+BAA9B,EAAyE,6BAAzE,EAA6G,wBAA7G,EAAsJ,kCAAtJ,EAAoM,6BAApM,EAA0O,0BAA1O,EAA4Q,yB,SCK/PA,EAAY,WACvB,IAAMC,GAAWC,EAAAA,EAAAA,MAcXC,GAAaC,EAAAA,EAAAA,IAAO,CACxBC,OAAOC,EAAAA,EAAAA,MAASD,MAAM,yBAAyBE,WAC/CC,UAAUF,EAAAA,EAAAA,MAASG,IAAI,GAAGF,aAG5B,OACE,iBAAKG,UAAWC,EAAhB,WACE,eAAID,UAAWC,EAAf,yBACA,SAAC,KAAD,CACEC,cAXgB,CAAEP,MAAO,GAAIG,SAAU,IAYvCK,SAtBe,SAACC,EAAD,GAA4B,IAAjBC,EAAgB,EAAhBA,UAC9Bd,GACEe,EAAAA,EAAAA,IAAM,CACJX,MAAOS,EAAOT,MACdG,SAAUM,EAAON,YAGrBO,GACD,EAeKE,iBAAkBd,EAHpB,UAKE,UAAC,KAAD,CAAMO,UAAWC,EAAUO,aAAa,MAAxC,WACE,iBAAKR,UAAWC,EAAhB,WACE,SAAC,KAAD,CACED,UAAWC,EACXQ,KAAK,QACLC,KAAK,QACLC,YAAY,WAEd,SAAC,KAAD,CAAcX,UAAWC,EAAWW,UAAU,MAAMF,KAAK,cAG3D,iBAAKV,UAAWC,EAAhB,WACE,SAAC,KAAD,CACED,UAAWC,EACXQ,KAAK,WACLC,KAAK,WACLC,YAAY,cAEd,SAAC,KAAD,CACEX,UAAWC,EACXW,UAAU,MACVF,KAAK,iBAIT,mBAAQV,UAAWC,EAAYQ,KAAK,SAApC,2BAOT,EChEc,SAASI,IACtB,OAAO,SAACvB,EAAD,GACR,C","sources":["webpack://react-homework-template/./src/components/LoginForm/LoginForm.module.css?4ac5","components/LoginForm/LoginForm.js","pages/Login.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"formWrapper\":\"LoginForm_formWrapper__Sc8W5\",\"formTitle\":\"LoginForm_formTitle__xGeGl\",\"form\":\"LoginForm_form__gPEx5\",\"formInputGroup\":\"LoginForm_formInputGroup__mLtPR\",\"formInput\":\"LoginForm_formInput__kt+x6\",\"button\":\"LoginForm_button__LodJg\",\"error\":\"LoginForm_error__012y+\"};","import { useDispatch } from 'react-redux';\nimport { logIn } from 'redux/auth/operations';\nimport { Formik, Form, Field, ErrorMessage } from 'formik';\nimport { object, string } from 'yup';\nimport css from './LoginForm.module.css';\n\nexport const LoginForm = () => {\n  const dispatch = useDispatch();\n\n  const handleSubmit = (values, { resetForm }) => {\n    dispatch(\n      logIn({\n        email: values.email,\n        password: values.password,\n      })\n    );\n    resetForm();\n  };\n\n  const initialValues = { email: '', password: '' };\n\n  const userSchema = object({\n    email: string().email('Invalid email address').required(),\n    password: string().min(5).required(),\n  });\n\n  return (\n    <div className={css.formWrapper}>\n      <h2 className={css.formTitle}>Login form</h2>\n      <Formik\n        initialValues={initialValues}\n        onSubmit={handleSubmit}\n        validationSchema={userSchema}\n      >\n        <Form className={css.form} autoComplete=\"off\">\n          <div className={css.formInputGroup}>\n            <Field\n              className={css.formInput}\n              type=\"email\"\n              name=\"email\"\n              placeholder=\"email\"\n            />\n            <ErrorMessage className={css.error} component=\"div\" name=\"email\" />\n          </div>\n\n          <div className={css.formInputGroup}>\n            <Field\n              className={css.formInput}\n              type=\"password\"\n              name=\"password\"\n              placeholder=\"password\"\n            />\n            <ErrorMessage\n              className={css.error}\n              component=\"div\"\n              name=\"password\"\n            />\n          </div>\n\n          <button className={css.button} type=\"submit\">\n            Log in\n          </button>\n        </Form>\n      </Formik>\n    </div>\n  );\n};\n","import { LoginForm } from 'components/LoginForm/LoginForm';\n\nexport default function Login() {\n  return <LoginForm />;\n}\n"],"names":["LoginForm","dispatch","useDispatch","userSchema","object","email","string","required","password","min","className","css","initialValues","onSubmit","values","resetForm","logIn","validationSchema","autoComplete","type","name","placeholder","component","Login"],"sourceRoot":""}